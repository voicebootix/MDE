import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { 
  ClipboardSignature, 
  Download, 
  FileText, 
  CheckCircle,
  Calendar,
  User,
  Bot,
  Sparkles
} from "lucide-react";
import { motion } from "framer-motion";

export default function AgreementGenerator({ 
  cofounderAgreement, 
  features, 
  businessStrategy, 
  onFinalizeAgreement 
}) {
  const [founderName, setFounderName] = useState("");
  const [projectTitle, setProjectTitle] = useState("");
  const [additionalTerms, setAdditionalTerms] = useState("");

  const approvedFeatures = features.filter(f => f.status === 'approved');
  const canGenerateAgreement = approvedFeatures.length > 0 && businessStrategy;

  const handleGenerateAgreement = () => {
    const agreement = {
      projectName: projectTitle || "Unnamed Project",
      founderName: founderName || "Anonymous Founder",
      date: new Date().toLocaleDateString(),
      finalizedFeatures: approvedFeatures,
      agreedStrategy: businessStrategy,
      additionalTerms,
      aiSignature: "AI Cofounder v2.0",
      timestamp: new Date().toISOString()
    };
    
    onFinalizeAgreement(agreement);
  };

  const downloadAgreement = (format) => {
    if (!cofounderAgreement) return;

    let content = "";
    const agreement = cofounderAgreement;

    if (format === 'markdown') {
      content = `# Cofounder Agreement

## Project Details
- **Project Name**: ${agreement.projectName}
- **Founder**: ${agreement.founderName}
- **Date**: ${agreement.date}
- **AI Cofounder**: ${agreement.aiSignature}

## Agreed Features
${agreement.finalizedFeatures.map(f => `- **${f.name}**: ${f.description}`).join('\n')}

## Business Strategy
${agreement.agreedStrategy ? `
### Market Analysis
${agreement.agreedStrategy.marketAnalysis}

### Key Recommendations
${agreement.agreedStrategy.recommendations?.map(r => `- ${r}`).join('\n') || 'None specified'}
` : 'No strategy defined'}

## Additional Terms
${agreement.additionalTerms || 'None specified'}

## Signatures
- **Founder**: ${agreement.founderName} (Digital signature on ${agreement.date})
- **AI Cofounder**: ${agreement.aiSignature} (Auto-signed on ${agreement.date})

---
*Generated by AI Debugger Factory - Your Revolutionary Business Partner*
      `;
    } else if (format === 'json') {
      content = JSON.stringify(agreement, null, 2);
    } else {
      // Plain text
      content = `COFOUNDER AGREEMENT

Project: ${agreement.projectName}
Founder: ${agreement.founderName}
Date: ${agreement.date}
AI Cofounder: ${agreement.aiSignature}

AGREED FEATURES:
${agreement.finalizedFeatures.map(f => `- ${f.name}: ${f.description}`).join('\n')}

BUSINESS STRATEGY:
${agreement.agreedStrategy?.marketAnalysis || 'Not specified'}

ADDITIONAL TERMS:
${agreement.additionalTerms || 'None'}

SIGNATURES:
Founder: ${agreement.founderName}
AI Cofounder: ${agreement.aiSignature}
      `;
    }

    const blob = new Blob([content], { 
      type: format === 'json' ? 'application/json' : 'text/plain' 
    });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `cofounder-agreement.${format === 'markdown' ? 'md' : format === 'json' ? 'json' : 'txt'}`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  if (cofounderAgreement) {
    return (
      <div className="p-6 h-full overflow-y-auto">
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          className="space-y-6"
        >
          {/* Agreement Header */}
          <Card className="bg-gradient-to-r from-green-50 to-blue-50 border-green-200">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <CheckCircle className="w-6 h-6 text-green-600" />
                Cofounder Agreement Finalized
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-2 gap-4">
                <div>
                  <p className="text-sm text-gray-600">Project</p>
                  <p className="font-semibold text-gray-900">{cofounderAgreement.projectName}</p>
                </div>
                <div>
                  <p className="text-sm text-gray-600">Date</p>
                  <p className="font-semibold text-gray-900">{cofounderAgreement.date}</p>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Agreement Details */}
          <Card>
            <CardHeader>
              <CardTitle>Agreement Details</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {/* Parties */}
              <div>
                <h4 className="font-medium text-gray-900 mb-2">Parties</h4>
                <div className="flex items-center gap-4">
                  <div className="flex items-center gap-2">
                    <User className="w-4 h-4 text-blue-600" />
                    <span className="text-sm">{cofounderAgreement.founderName}</span>
                  </div>
                  <div className="text-gray-400">+</div>
                  <div className="flex items-center gap-2">
                    <Bot className="w-4 h-4 text-emerald-600" />
                    <span className="text-sm">{cofounderAgreement.aiSignature}</span>
                  </div>
                </div>
              </div>

              {/* Features */}
              <div>
                <h4 className="font-medium text-gray-900 mb-2">Agreed Features ({cofounderAgreement.finalizedFeatures.length})</h4>
                <div className="space-y-2">
                  {cofounderAgreement.finalizedFeatures.map((feature, index) => (
                    <div key={index} className="bg-gray-50 rounded-lg p-3">
                      <div className="font-medium text-sm">{feature.name}</div>
                      <div className="text-xs text-gray-600">{feature.description}</div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Additional Terms */}
              {cofounderAgreement.additionalTerms && (
                <div>
                  <h4 className="font-medium text-gray-900 mb-2">Additional Terms</h4>
                  <div className="bg-gray-50 rounded-lg p-3">
                    <p className="text-sm text-gray-700">{cofounderAgreement.additionalTerms}</p>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>

          {/* Export Options */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Download className="w-5 h-5" />
                Export Agreement
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex gap-3">
                <Button 
                  variant="outline" 
                  onClick={() => downloadAgreement('markdown')}
                  className="gap-2"
                >
                  <FileText className="w-4 h-4" />
                  Markdown
                </Button>
                <Button 
                  variant="outline" 
                  onClick={() => downloadAgreement('txt')}
                  className="gap-2"
                >
                  <FileText className="w-4 h-4" />
                  Text
                </Button>
                <Button 
                  variant="outline" 
                  onClick={() => downloadAgreement('json')}
                  className="gap-2"
                >
                  <FileText className="w-4 h-4" />
                  JSON
                </Button>
              </div>
            </CardContent>
          </Card>
        </motion.div>
      </div>
    );
  }

  return (
    <div className="p-6 h-full overflow-y-auto">
      {!canGenerateAgreement ? (
        <div className="text-center py-12">
          <ClipboardSignature className="w-16 h-16 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-gray-900 mb-2">Agreement Not Ready</h3>
          <p className="text-gray-600 mb-4">
            You need approved features and a business strategy before generating the cofounder agreement
          </p>
          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 text-left">
            <h4 className="font-medium text-yellow-800 mb-2">Requirements:</h4>
            <div className="space-y-1 text-sm text-yellow-700">
              <div className="flex items-center gap-2">
                {approvedFeatures.length > 0 ? (
                  <CheckCircle className="w-4 h-4 text-green-600" />
                ) : (
                  <div className="w-4 h-4 border-2 border-gray-300 rounded-full" />
                )}
                <span>At least one approved feature</span>
              </div>
              <div className="flex items-center gap-2">
                {businessStrategy ? (
                  <CheckCircle className="w-4 h-4 text-green-600" />
                ) : (
                  <div className="w-4 h-4 border-2 border-gray-300 rounded-full" />
                )}
                <span>Business strategy analysis</span>
              </div>
            </div>
          </div>
        </div>
      ) : (
        <div className="space-y-6">
          <div className="text-center">
            <ClipboardSignature className="w-12 h-12 text-purple-600 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-900 mb-2">Ready to Finalize Agreement</h3>
            <p className="text-gray-600">
              Create a virtual cofounder agreement based on your approved features and strategy
            </p>
          </div>

          <Card>
            <CardHeader>
              <CardTitle>Agreement Information</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Your Name
                </label>
                <Input
                  value={founderName}
                  onChange={(e) => setFounderName(e.target.value)}
                  placeholder="Enter your full name"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Project Title
                </label>
                <Input
                  value={projectTitle}
                  onChange={(e) => setProjectTitle(e.target.value)}
                  placeholder="Enter your project name"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Additional Terms (Optional)
                </label>
                <Textarea
                  value={additionalTerms}
                  onChange={(e) => setAdditionalTerms(e.target.value)}
                  placeholder="Any special terms or conditions you'd like to include..."
                  rows={3}
                />
              </div>
            </CardContent>
          </Card>

          <Card className="bg-blue-50 border-blue-200">
            <CardContent className="p-4">
              <h4 className="font-medium text-blue-900 mb-2">Agreement Preview</h4>
              <div className="text-sm text-blue-800 space-y-1">
                <p>• {approvedFeatures.length} approved features will be included</p>
                <p>• Business strategy and market analysis will be attached</p>
                <p>• Virtual signatures from both parties</p>
                <p>• Exportable in multiple formats</p>
              </div>
            </CardContent>
          </Card>

          <Button 
            onClick={handleGenerateAgreement}
            className="w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 gap-2"
            size="lg"
          >
            <Sparkles className="w-5 h-5" />
            Generate Cofounder Agreement
          </Button>
        </div>
      )}
    </div>
  );
}